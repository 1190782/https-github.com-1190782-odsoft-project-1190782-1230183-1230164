spring.application.name=psoft-g1

##
## Profiles
##
spring.profiles.active=bootstrap

##
## OpenAPI
##
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui

##
## JWT
##
jwt.private.key=classpath:rsa.private.key
jwt.public.key=classpath:rsa.public.key

##
## datasource
##
spring.datasource.url=jdbc:h2:tcp://localhost/~/psoft-g1
# ^ H2 Console needs to be running, and file needs to be previously created in path ^
#spring.datasource.url=jdbc:h2:~/psoft-g1
# ^ File needs to be previously created in path ^
#spring.datasource.url=jdbc:h2:mem:testdb
# ^ No prerequisites ^
#TODO: colocar a funcionar via TCP. neste momento está só em memória
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=mysqluser
spring.datasource.password=mysqlpass
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.dialect=org.hibernate.dialect.H2Dialect

## show SQL
spring.jpa.show-sql=false
#hibernate.show_sql=false
#spring.jpa.hibernate.format_sql=true
#Ricardo: what is this for?

## database schema generation
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

##
## H2 console for development purposes.
## e.g., http://localhost:8080/h2-console
##
## for security reasons this setting should be false
spring.h2.console.enabled=true

##
## MULTIPART (MultipartProperties)
##
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

##
## File Storage Properties
##
# All files uploaded through the REST API will be stored in this directory
#file.upload-dir=/DEV/uploads-psoft-g1
#TODO:Ricardo: Is this needed?
