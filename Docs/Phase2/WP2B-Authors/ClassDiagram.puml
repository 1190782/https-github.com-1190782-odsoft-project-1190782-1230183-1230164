@startuml
'https://plantuml.com/class-diagram

skinparam classAttributeIconSize 0
class Authors <<entity>>{
    - authorsNumber : int
}
class Name <<entity>>{
    - name: string
    + toString() : String
}

class AuthorBio <<value>>{
    - Short Bio: string
    + toString() : String
}

class Photo <<Entity>>{
    - photo: Byte[]
}

class AuthorsController {
        + create(CreateAuthorRequest resource): ResponseEntity<AuthorView>
        + partialUpdate(Long authorNumber, WebRequest request, UpdateAuthorRequest resource): ResponseEntity<AuthorView>
        + findByAuthorNumber(Long authorNumber): ResponseEntity<AuthorView>
        + findByName(String name): ListResponse<AuthorView>
        + getBooksByAuthorNumber(Long authorNumber): ListResponse<BookView>
        + getTop5(): ListResponse<AuthorView>
}

class AuthorsServiceImpl implements AuthorsService{
}

interface AuthorsService {
    +Iterable<Author> findAll();
    +Optional<Author> findByAuthorNumber(Long authorNumber);
    +List<Author> findByName(String name);
    +Author create(CreateAuthorRequest resource);
    +Author partialUpdate(Long authorNumber, UpdateAuthorRequest resource, long desiredVersion);
    +List<Author> findTopAuthorByLendings();
    +List<Book> findBooksByAuthorNumber(Long authorNumber);

}

interface AuthorsRepository {
    + findByAuthorNumber(Long authorNumber)
    + searchByAuthorNameLike(@Param("name") String name)
    + findByName(String name)
    +save(Author author)
    +findAll()
    +findTopAuthorByLendings (Pageable pageableRules)
}

AuthorsServiceImpl ..> Authors
AuthorsController ..> AuthorsService
AuthorsServiceImpl .left.> AuthorsRepository

Authors --o Name
Authors --o Photo
Authors --o AuthorBio
@enduml
